{"version":3,"sources":["components/MultiStepForm/MoodSelect.js","components/MultiStepForm/MoodTextArea.js","components/MultiStepForm/DistortionSelect.js","components/MultiStepForm/DistortionTextArea.js","components/MultiStepForm/Summary.js","components/MultiStepForm/Success.js","components/MultiStepForm/MasterForm.js","components/MoodScriber.js","components/FirstPage/Intro.js","components/FirstPage/Explanations.js","components/Definitions.js","components/Home_Page/Welcome.js","components/Home_Page/DateTime.js","components/Home_Page/LearnMore.js","components/Home_Page/LetsGo.js","components/Home_Page/SubHeading.js","components/Dashboard/Donut.js","components/Home_Page/Home.js","components/diary/FirstFive.js","components/diary/SecondFive.js","components/diary/DistDiary.js","components/diary/Diary.js","components/Login/Register.js","components/Login/Login.js","components/Login/LandingPage.js","components/Nav.js","components/Dashboard/Bubble.js","components/Dashboard/HeatMap.js","components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","components/3366283.png","components/FirstPage/BlackWhite.png","components/FirstPage/JumpingToConclusions.png","components/FirstPage/Overgeneralisation.png","components/FirstPage/Shoulds.png","components/FirstPage/MentalFilter.png","components/FirstPage/Personalisation.png","components/FirstPage/UniversalLabelling.png","components/FirstPage/Catastrophisation.png","components/FirstPage/EmotionalReasoning.png","components/FirstPage/Dim.png","components/Home_Page/3364392.jpg","components/Login/tspCatchThoughtCrop.png","components/Logo.png"],"names":["emotions","id","name","MoodSelect","continue","e","preventDefault","props","nextStep","this","values","handleChange","handleRadioChange","emotionList","map","item","key","value","className","htmlFor","onChange","Array","from","keys","a","selectedIntensity","type","checked","onClick","React","Component","MoodTextArea","back","prevStep","rows","moodLog","class","distortions","DistortionSelect","distortionList","DistortionTextArea","response","Summary","submit","emotion","distortion","Success","MasterForm","state","step","setState","thoughtToLog","uuid","uuidv4","Mood","Thoughts","Distortion","Response","Mood_intensity","axios","post","then","newThoughts","thoughts","push","catch","error","console","target","input","log","MoodScriber","src","scriberImage","alt","Intro","Explanations","BlackAndWhite","JumpingToConclusions","Overgeneralisation","Catastrophisation","MentalFilter","Dim","Personalisation","Shoulds","EmotionalReasoning","UniversalLabelling","Definitions","moment","require","Welcome","hour","format","welcomeMessage","DateTime","day","toUpperCase","date","month","now","useState","time","setTime","setInterval","newTime","LearnMore","to","LetsGo","SubHeading","style","color","homeImage","Moment","extendMoment","Donut","componentDidMount","get","fullData","data","i","length","thought","utc","Timestamp","eventDate","eventTime","range","lastMonthData","filter","entry","contains","total","sum","countDistortions","count","percentages","makePercent","number","Math","round","series","labels","dataLabels","enabled","enabledOnSeries","options","colors","chart","plotOptions","pie","expandOnClick","tooltip","y","formatter","title","text","legend","show","width","Home","FirstFive","Fragment","Button","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","SecondFive","DistDiary","Diary","filteredData","handleDayClick","selected","selectedDay","undefined","dataToRender","forEach","dayFormatted","onDayClick","selectedDays","toLocaleDateString","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","newUser","setNewUser","history","useHistory","onSubmit","placeholder","for","disabled","loginToAdd","userId","Login","classname","aria-describedby","autoComplete","users","user","LandingPage","tspCatchThoughtCrop","Nav","navStyle","href","Logo","Bubble","plottable","datum","record","split","year","Number","intensityInt","parseInt","height","fill","opacity","xaxis","tickAmount","yaxis","min","val","x","seriesName","z","showForNullSeries","showForZeroSeries","HeatMap","end","lastWeekData","lastWeek","subtract","lastWeekDays","negativeThoughts","positiveMoods","negativeMoods","updatedData","negativeMoodData","startsWith","includes","negativeThoughtData","positiveMoodData","categories","reverse","grid","padding","right","backgroundColor","borderRadius","carousel","Dashboard","Carousel","Item","App","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5fa8bfaa.chunk.js","sourcesContent":["import React from \"react\";\n// import NumberRadio from \"./NumberRadio\";\n\nconst emotions = [\n  { id: 1, name: \"Happy\" },\n  { id: 2, name: \"Excited\" },\n  { id: 3, name: \"Inspired\" },\n  { id: 4, name: \"Calm\" },\n  { id: 5, name: \"Neutral\" },\n  { id: 6, name: \"Stressed\" },\n  { id: 7, name: \"Anxious\" },\n  { id: 8, name: \"Sad\" },\n  { id: 9, name: \"Angry\" },\n  { id: 10, name: \"Overwhelmed\" },\n  { id: 11, name: \"Exhausted\" }\n];\n\nclass MoodSelect extends React.Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange, handleRadioChange } = this.props;\n\n    let emotionList = emotions.map(item => {\n      return (\n        <option key={item.id} value={item.name}>\n          {item.name}\n        </option>\n      );\n    }, this);\n\n    // let radioBtn = [1, 2, 3, 4, 5].map(values => {\n    //   const activeRadio = values.selectedIntensity === values.toString();\n\n    //   return (\n    //     <label\n    //       className={\n    //         values.selectedIntensity === activeRadio\n    //           ? \"btn btn-secondary active\"\n    //           : \"btn btn-secondary\"\n    //       }\n    //     >\n    //       <input\n    //         type=\"radio\"\n    //         name=\"options\"\n    //         value={values}\n    //         checked={values.selectedIntensity === activeRadio}\n    //         onChange={handleRadioChange}\n    //       />\n    //     </label>\n    //   );\n    // });\n    //need to retrieve intensity selected from radio button\n\n    return (\n      <form className=\"multiStep shadow-sm\">\n        <div className=\"form-row form-group\">\n          <label className=\"mb-3\" htmlFor=\"moodDropdown\">\n            Select your current mood:\n          </label>\n          <select\n            className=\"custom-select btn-outline-next\"\n            id=\"moodDropdown\"\n            onChange={handleChange(\"emotion\")}\n          >\n            {emotionList}\n          </select>\n        </div>\n        <div className=\"form-row form-inline mt-5\">\n          <label htmlFor=\"options\">Select the intensity:</label>\n\n          <div className=\"ml-4 btn-group btn-group-toggle form-check\">\n            {Array.from(Array(5).keys()).map(a => (\n              <label\n                key={a}\n                className={\n                  values.selectedIntensity === a + 1\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n              >\n                <input\n                  type=\"radio\"\n                  name=\"options\"\n                  value={a + 1}\n                  checked={values.selectedIntensity === a + 1}\n                  onChange={handleRadioChange}\n                />\n                {a + 1}\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className=\"form-row btn-row-next\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-next\"\n            onClick={this.continue}\n          >\n            Next\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\n// <NumberRadio onChange={handleChange} values={values} />\n\nexport default MoodSelect;\n","import React from \"react\";\n\nclass MoodTextArea extends React.Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n      <form className=\"multiStep\">\n        <div className=\"form-row\">\n          <label className=\"mb-3\" htmlFor=\"moodTextArea\">\n            Write a bit more about how you're feeling...\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"mood-text-area\"\n            rows=\"8\"\n            value={values.moodLog}\n            onChange={handleChange(\"moodLog\")}\n          ></textarea>\n        </div>\n        <div class=\"form-row\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-back btn-row-back\"\n            onClick={this.back}\n          >\n            Back\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-next btn-row-next\"\n            onClick={this.continue}\n          >\n            Next\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default MoodTextArea;\n","import React from \"react\";\n\nconst distortions = [\n  { id: 1, name: \"All or Nothing\" },\n  { id: 2, name: \"Jumping to Conclusions\" },\n  { id: 3, name: \"Overgeneralisation\" },\n  { id: 4, name: \"Catastrophising\" },\n  { id: 5, name: \"Mental Filtering\" },\n  { id: 6, name: \"Disqualifying the Positive\" },\n  { id: 7, name: \"Personalisation\" },\n  { id: 8, name: \"Shoulds & Oughts\" },\n  { id: 9, name: \"Emotional Reasoning\" },\n  { id: 10, name: \"Labelling\" },\n  { id: 11, name: \"Unsure\" },\n  { id: 12, name: \"None - feeling great!\" }\n];\n\nclass DistortionSelect extends React.Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { handleChange } = this.props;\n\n    let distortionList = distortions.map(item => {\n      return (\n        <option key={item.id} value={item.name}>\n          {item.name}\n        </option>\n      );\n    }, this);\n    //need to retrieve intensity selected from radio button\n\n    return (\n      <form className=\"multiStep\">\n        <div class=\"form-row\">\n          <label className=\"mb-3\" htmlFor=\"cognitiveDropdown\">\n            Can you associate this with a congnitive distortion?\n          </label>\n          <select\n            className=\"custom-select mb-4 btn-outline-next\"\n            id=\"cognitiveDropdown\"\n            onChange={handleChange(\"distortion\")}\n          >\n            {distortionList}\n          </select>\n        </div>\n        <div class=\"form-row\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-back btn-row-back\"\n            onClick={this.back}\n          >\n            Back\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-next btn-row-next\"\n            onClick={this.continue}\n          >\n            Next\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default DistortionSelect;\n","import React from \"react\";\n\nclass DistortionTextArea extends React.Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n      <form className=\"multiStep\">\n        <div className=\"form-row\">\n          <label className=\"mb-3\" htmlFor=\"distortionTextArea\">\n            Write a rational response to yourself:\n          </label>\n          <textarea\n            className=\"form-control shadow-sm\"\n            id=\"dist-text-area\"\n            rows=\"8\"\n            value={values.response}\n            onChange={handleChange(\"response\")}\n          ></textarea>\n        </div>\n        <div class=\"form-row\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-back btn-row-back\"\n            onClick={this.back}\n          >\n            Back\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-next btn-row-next\"\n            onClick={this.continue}\n          >\n            Next\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default DistortionTextArea;\n","import React, { Component } from \"react\";\n\nexport class Summary extends Component {\n  continue = e => {\n    e.preventDefault();\n    //---DATA SHOULD BE SENT TO API HERE---//\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  submit = e => {\n    e.preventDefault();\n    //---DATA SHOULD BE SENT TO API HERE---//\n    this.props.submit();\n  };\n\n  render() {\n    //now we can use values & handleChange instead of this.props\n    const {\n      values: { emotion, selectedIntensity, moodLog, distortion, response }\n    } = this.props;\n\n    return (\n      <div className=\"multiStep\">\n        <form>\n          <h5>\n            <u>Confirm:</u>\n          </h5>\n          <ul className=\"list-weight\">\n            <li>\n              <b>Emotion Selected:</b> {emotion}\n            </li>\n            <li>\n              {\" \"}\n              <b>Intensity Selected:</b> {selectedIntensity}\n            </li>\n            <li>\n              {\" \"}\n              <b>Expansion on Mood:</b> {moodLog}\n            </li>\n            <li>\n              {\" \"}\n              <b>Associated Distortion:</b> {distortion}\n            </li>\n            <li>\n              {\" \"}\n              <b>Rational Response:</b> {response}\n            </li>\n          </ul>\n          <br />\n          <div class=\"form-row\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-back btn-row-back\"\n              onClick={this.back}\n            >\n              Back\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-next btn-row-next\"\n              onClick={this.submit}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","import React, { Component } from \"react\";\n\nexport class Success extends Component {\n  render() {\n    return (\n      <h5 className=\"multiStep text-left\">Thoughts succesfully logged!</h5>\n    );\n  }\n}\n\nexport default Success;\n","import React, { Component } from \"react\";\nimport MoodSelect from \"./MoodSelect\";\nimport MoodTextArea from \"./MoodTextArea\";\nimport DistortionSelect from \"./DistortionSelect\";\nimport DistortionTextArea from \"./DistortionTextArea\";\nimport Summary from \"./Summary\";\nimport Success from \"./Success\";\nimport uuidv4 from \"uuid/v4\";\nimport axios from \"axios\";\n\nclass MasterForm extends Component {\n\tstate = {\n\t\tstep: 1,\n\t\temotion: \"\",\n\t\tselectedIntensity: \"\",\n\t\tmoodLog: \"\",\n\t\tdistortion: \"\",\n\t\tresponse: \"\"\n\t};\n\n\t//proceed to the next step\n\tnextStep = () => {\n\t\t//destructuring - pulling out step and storing it in a variable\n\t\tconst { step } = this.state;\n\t\tthis.setState({\n\t\t\tstep: step + 1\n\t\t});\n\t};\n\n\t//go to the previous step\n\tprevStep = () => {\n\t\t//destructuring - pulling out step and storing it in a variable\n\t\tconst { step } = this.state;\n\t\tthis.setState({\n\t\t\tstep: step - 1\n\t\t});\n\t};\n\n\t//function to send to database\n\tsubmit = () => {\n\t\t//variable to be sent\n\t\tconst thoughtToLog = {\n\t\t\tuuid: uuidv4(),\n\t\t\tMood: this.state.emotion,\n\t\t\tThoughts: this.state.moodLog,\n\t\t\tDistortion: this.state.distortion,\n\t\t\tResponse: this.state.response,\n\t\t\tMood_intensity: this.state.selectedIntensity\n\t\t};\n\n\t\t/// connect to backend\n\t\taxios\n\t\t\t.post(\n\t\t\t\t\"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Thoughts\",\n\t\t\t\tthoughtToLog\n\t\t\t)\n\t\t\t// handle success\n\t\t\t.then((response) => {\n\t\t\t\t// Get current list\n\t\t\t\tconst newThoughts = this.state.thoughts;\n\t\t\t\t// Add the new log to the array by pushing\n\t\t\t\tnewThoughts.push(thoughtToLog);\n\t\t\t\t// Update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tthoughts: newThoughts\n\t\t\t\t});\n\t\t\t})\n\t\t\t// handle error\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\n\t\t// go to success page\n\t\tconst { step } = this.state;\n\t\tthis.setState({\n\t\t\tstep: step + 1\n\t\t});\n\t};\n\n\thandleRadioChange = (e) => {\n\t\tthis.setState({ selectedIntensity: +e.target.value });\n\t};\n\n\t//handle change within the fields\n\thandleChange = (input) => (e) => {\n\t\t//set 'input' to to value of the input field\n\t\tthis.setState({ [input]: e.target.value });\n\t\tconsole.log(this.state.emotion);\n\t};\n\n\trender() {\n\t\tconst { step } = this.state;\n\t\tconst {\n\t\t\temotion,\n\t\t\tselectedIntensity,\n\t\t\tmoodLog,\n\t\t\tdistortion,\n\t\t\tresponse\n\t\t} = this.state;\n\t\t//we can pass the values into each component & render them in the inputs\n\t\tconst values = {\n\t\t\temotion,\n\t\t\tselectedIntensity,\n\t\t\tmoodLog,\n\t\t\tdistortion,\n\t\t\tresponse\n\t\t};\n\n\t\tswitch (step) {\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<MoodSelect\n\t\t\t\t\t\tnextStep={this.nextStep}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleRadioChange={this.handleRadioChange}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<MoodTextArea\n\t\t\t\t\t\tnextStep={this.nextStep}\n\t\t\t\t\t\tprevStep={this.prevStep}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<DistortionSelect\n\t\t\t\t\t\tnextStep={this.nextStep}\n\t\t\t\t\t\tprevStep={this.prevStep}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 4:\n\t\t\t\treturn (\n\t\t\t\t\t<DistortionTextArea\n\t\t\t\t\t\tnextStep={this.nextStep}\n\t\t\t\t\t\tprevStep={this.prevStep}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 5:\n\t\t\t\treturn (\n\t\t\t\t\t<Summary\n\t\t\t\t\t\tnextStep={this.nextStep}\n\t\t\t\t\t\tprevStep={this.prevStep}\n\t\t\t\t\t\tsubmit={this.submit}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 6:\n\t\t\t\treturn <Success />;\n\t\t\tdefault:\n\t\t}\n\t}\n}\n\nexport default MasterForm;\n","import React from \"react\";\nimport MasterForm from \"./MultiStepForm/MasterForm\";\nimport scriberImage from \"./3366283.png\";\n\nfunction MoodScriber() {\n\treturn (\n\t\t<div className=\"container-fluid moodscriber\">\n\t\t\t<div className=\"row d-flex justify-content-around align-items-center\">\n\t\t\t\t<div className=\"col-lg-5 \">\n\t\t\t\t\t<h4 className=\"mt-1 mb-4\">Mood Scriber </h4>\n\t\t\t\t\t<MasterForm />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-lg-5 mt-5\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={scriberImage}\n\t\t\t\t\t\talt=\"catchThought\"\n\t\t\t\t\t\tid=\"catchThought\"\n\t\t\t\t\t\tclassName=\"img-fluid\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MoodScriber;\n","import React from \"react\";\r\n\r\nclass Intro extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <h3 class=\"title\">Cognitive Distortions</h3>\r\n\r\n        <h5>Have you ever convinced yourself of something that isn’t true?\r\n        Ever made excuses about yourself that stopped your growth and\r\n          development in life?\r\n        </h5>\r\n\r\n        <p>\r\n          {\" \"}\r\n          If so, it is important to understand cognitive distortion and what\r\n          category you fall under. You may even fall under more than one! So\r\n          what is it? Cognitive distortions are inaccurate thoughts which are\r\n          used to strengthen negative thinking.\r\n        </p>\r\n\r\n        <h5>Let Thought Catcher help you embark in this new journey.</h5>\r\n\r\n        <p>There are ten cognitive distortions that you should understand:</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport BlackAndWhite from \"./BlackWhite.png\";\r\nimport JumpingToConclusions from \"./JumpingToConclusions.png\";\r\nimport Overgeneralisation from \"./Overgeneralisation.png\";\r\nimport Shoulds from \"./Shoulds.png\";\r\nimport MentalFilter from \"./MentalFilter.png\";\r\nimport Personalisation from \"./Personalisation.png\";\r\nimport UniversalLabelling from \"./UniversalLabelling.png\";\r\nimport Catastrophisation from \"./Catastrophisation.png\";\r\nimport EmotionalReasoning from  \"./EmotionalReasoning.png\";\r\nimport Dim from \"./Dim.png\";\r\n\r\n\r\nclass Explanations extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n        <section id=\"one\" className=\"wrapper-style-1\">\r\n          <h5>1. All or Nothing</h5>\r\n          <h6>\r\n            <div className=\"img1\">\r\n              <img src={BlackAndWhite} alt=\"First Mindset\" className= \"center\"/>\r\n            </div>\r\n            You believe in one of the two extremes like failure or success and\r\n            that there is no ‘grey’ areas.\r\n          </h6>\r\n          <p>\r\n            Example: You passed your driving test, however, you had two minor\r\n            faults. As a result, you feel like you have failed because you did not pass perfectly.\r\n          </p>\r\n        </section>\r\n\r\n        <hr className= \"linestyle\"></hr>\r\n\r\n        <section id=\"two\" className=\"wrapper-style-2\">\r\n          <h5>2. Jumping to Conclusions</h5>\r\n\r\n          <h6>\r\n            <div className=\"img2\">\r\n              <img src={JumpingToConclusions} alt=\"Second Mindset\" className=\"center\" />\r\n            </div>\r\n            You make pessimistic interpretations or predictions without any\r\n            supporting evidence. It’s like having a crystal ball that constantly\r\n            tells you negative readings.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You’re wearing a shirt that makes you feel uncomfortable\r\n            and so, you may immediately assume that everyone is commenting on it behind your back.\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"three\" className=\"wrapper-style-2\">\r\n          <h5>3. Overgeneralisation</h5>\r\n\r\n          <h6>\r\n            <div className=\"img1\">\r\n              <img\r\n                src={Overgeneralisation}\r\n                alt=\"Third Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You come to a general conclusion based on a specific single\r\n            incident. This may create a conclusion that you may choose to follow.\r\n          </h6>\r\n\r\n          <p>\r\n            {\" \"}\r\n            Example: You fail a college exam, conclude you’re a failure and decide if\r\n            you should drop out of college.\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"four\" className=\"wrapper-style-2\">\r\n          <h5>4. Catastrophising</h5>\r\n\r\n          <h6>\r\n            <div className=\"img2\">\r\n              <img\r\n                src={Catastrophisation}\r\n                alt=\"Fourth Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You view an unfavourable outcome to an event and then decide that if\r\n            this outcome does happen, the results will be a disaster.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You feel like you fail when trying something new. As a result, you\r\n            form a belief where failure is imminent whenever you lack experience.\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"five\" className=\"wrapper-style-2\">\r\n          <h5>5. Mental Filtering</h5>\r\n\r\n          <h6>\r\n            <div className=\"img1\">\r\n              <img\r\n                src={MentalFilter}\r\n                alt=\"Fifth Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You take the negative details and magnify them while also filtering\r\n            out all the positives of a situation.\r\n          </h6>\r\n          <p>\r\n            {\" \"}\r\n            Example: You’re a Youtuber and one of your videos attract loads of\r\n            positive comments from your fans, however, you notice a bad comment\r\n            and you only focus on that.{\" \"}\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"six\" className=\"wrapper-style-2\">\r\n          <h5>6. Disqualifying the Positive</h5>\r\n\r\n          <h6>\r\n            <div className=\"img2\">\r\n              <img\r\n                src={Dim}\r\n                alt=\"Sixth Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You remove all the positives, coming up with several reasons why\r\n            the positive events in your life do not count.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You believe you got ‘lucky’ and that is the reason why you\r\n            got promoted, not because of how hard you have worked throughout the year.{\" \"}\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n        <section id=\"seven\" className=\"wrapper-style-2\">\r\n          <h5>7. Personalisation</h5>\r\n\r\n          <h6>\r\n            <div className=\"img1\">\r\n              <img\r\n                src={Personalisation}\r\n                alt=\"Seventh Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You believe that everything others say or do is some kind of direct,\r\n            personal reaction to you. You often compare yourself to others and\r\n            take things personally even when it was not meant that way.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You’re having a retirement party and because your brother\r\n            was late, you feel like this caused your guests to not enjoy it.{\" \"}\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"eight\" className=\"wrapper-style-2\">\r\n          <h5>8. Shoulds and Oughts</h5>\r\n\r\n          <h6>\r\n            <div className=\"img2\">\r\n              <img src={Shoulds} alt=\"Eighth Mindset\" className=\"center\" />\r\n            </div>\r\n            You follow a bunch of rules about how someone ‘should’ and ‘ought’ to behave, when\r\n            you break one of these rules you feel either angry or guilty for failing.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You should eat healthy and that you shouldn’t eat any\r\n            takeaways.{\" \"}\r\n          </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"nine\" className=\"wrapper-style-2\">\r\n          <h5>9. Emotional Reasoning</h5>\r\n\r\n          <h6>\r\n            <div className=\"img1\">\r\n              <img\r\n                src={EmotionalReasoning}\r\n                alt=\"Nineth Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            You feel a certain way and assume that it is true. This may lead to\r\n            you ignoring rationality and logic when you make your assumptions.\r\n          </h6>\r\n\r\n          <p>Example: You feel like a failure, so you must be a failure. </p>\r\n        </section>\r\n\r\n        <hr></hr>\r\n\r\n\r\n        <section id=\"ten\" className=\"wrapper-style-2\">\r\n          <h5>10. Labelling</h5>\r\n\r\n          <h6>\r\n            <div className=\"img2\">\r\n              <img\r\n                src={UniversalLabelling}\r\n                alt=\"Tenth Mindset\"\r\n                className=\"center\"\r\n              />\r\n            </div>\r\n            Instead of describing a mistake in context of a particular\r\n            situation, you assign an unhealthy label on yourself or others. This\r\n            is a mixture of stereotyping and overgeneralisation.\r\n          </h6>\r\n\r\n          <p>\r\n            Example: You mislabel your colleague as ‘difficult and rude’ when\r\n            you met him once at a company conference without bothering to\r\n            understand any context around why. He might have had a bad day. {\" \"}\r\n          </p>\r\n        </section>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Explanations;\r\n","import React from \"react\";\nimport Intro from \"./FirstPage/Intro\";\nimport Explanations from \"./FirstPage/Explanations\";\n\nfunction Definitions() {\n  return (\n    <div className=\"container-fluid overflow\">\n      <Intro />\n      <Explanations />\n    </div>\n  );\n}\n\nexport default Definitions;\n","import React from \"react\";\nvar moment = require(\"moment\");\n\nfunction Welcome() {\n  const hour = moment().format(\"H\");\n  console.log(hour);\n\n  let welcomeMessage = \"\";\n  switch (true) {\n    case hour < 12:\n      welcomeMessage = \"Good morning!\";\n      break;\n    case hour < 18:\n      welcomeMessage = \"Good afternoon!\";\n      break;\n    case hour >= 18:\n      welcomeMessage = \"Good evening!\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <h3 className=\"welcome d-flex align-items-center\">{welcomeMessage}</h3>\n  );\n}\nexport default Welcome;\n","import React, { useState } from \"react\";\nvar moment = require(\"moment\");\n\nfunction DateTime() {\n  const day = moment()\n    .format(\"dddd\")\n    .toUpperCase();\n  const date = moment().format(\"Do\");\n  const month = moment().format(\"MMMM YYYY\");\n\n  const now = moment().format(\"LT\");\n\n  const [time, setTime] = useState(now);\n\n  function updateTime() {\n    const newTime = moment().format(\"LT\"); //this will allow us to call a new updated time\n    setTime(newTime); //this is the function we delcared would update our state in the destructured array\n  }\n\n  setInterval(updateTime, 1000); //calls updatedTime every second\n\n  return (\n    <div className=\"row date-box justify-content-between shadow-sm\">\n      <div className=\"col-7\">\n        <div className=\"row d-flex pt-3 pl-4  d-flex align-self-center\">\n          <h5 className=\"font-weight-bold align-items-end\">{day}</h5>\n        </div>\n        <div className=\"row d-flex mt-0 pl-4 d-flex align-self-center\">\n          <h6>{date + \" \" + month}</h6>\n        </div>\n      </div>\n      <div className=\"col-5 d-flex align-self-center justify-content-end pr-3\">\n        <h5>{time}</h5>\n      </div>\n    </div>\n  );\n}\nexport default DateTime;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction LearnMore() {\n  return (\n    <div className=\"info-box shadow-sm d-flex align-items-end flex-column\">\n      <p className=\"mb-1\">\n        Each time you log a thought via the Mood Scriber, we store it in memory.\n        Your dashboard will give you anoverview of your thought patterns, but\n        for more detail, you can review each entry you make via the Diary.\n      </p>\n      <Link to=\"/diary\">\n        <button type=\"button\" className=\"btn btn-outline-next btn-sm\">\n          To the diary!\n        </button>\n      </Link>\n    </div>\n  );\n}\nexport default LearnMore;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction LetsGo() {\n  return (\n    <div className=\"info-box shadow-sm d-flex align-items-end flex-column\">\n      <p>\n        If you're new to CBT, or simply need a reminder of each cognitive\n        distortion, head over to the defintions page where you can find out a\n        bit more about each one.\n      </p>\n      <p className=\"mb-0\">\n        They'll always be there for you to refer back to any time you need.\n      </p>\n      <Link to=\"/definitions\">\n        <button type=\"button\" className=\"btn btn-sm btn-outline-next\">\n          Take a look!\n        </button>\n      </Link>\n    </div>\n  );\n}\nexport default LetsGo;\n\n// <p>\n//         Thought Catcher is designed to help you identify your negative thinking\n//         habits and replace them with positive ones!\n//       </p>\n//       <p>\n//         It also gives you the tools to track your thoughts and moods, helping\n//         you keep on top of your mental health.\n//       </p>\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport homeImage from \"./3364392.jpg\";\n\nfunction SubHeading() {\n\tconst navStyle = {\n\t\tcolor: \"purple\",\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<p className=\"sub-heading shadow-sm mb-0\">\n\t\t\t\tCBT focuses on how your thoughts affect your moods and teaches you\n\t\t\t\tskills for dealing with negative thinking. A good way to kick negative\n\t\t\t\tthinking is to catch your thoughts and identify which thinking patterns\n\t\t\t\thave been getting you down.\n\t\t\t\t<Link style={navStyle} to=\"/moodscriber\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tReady to log some thoughts?\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t\t<img\n\t\t\t\tsrc={homeImage}\n\t\t\t\talt=\"home-pic\"\n\t\t\t\tid=\"home-pic\"\n\t\t\t\tclassName=\"img-fluid pic-radius shadow-sm\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport default SubHeading;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nconst Moment = require(\"moment\");\nconst MomentRange = require(\"moment-range\");\nconst moment = MomentRange.extendMoment(Moment);\nmoment().format();\n\nclass Donut extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tseries: [],\n\t\t\tlabels: [\n\t\t\t\t\"All or Nothing\",\n\t\t\t\t\"Jumping to Conclusions\",\n\t\t\t\t\"Overgeneralisation\",\n\t\t\t\t\"Catastrophising\",\n\t\t\t\t\"Mental filtering\",\n\t\t\t\t\"Disqualifying the Positive\",\n\t\t\t\t\"Personalisation\",\n\t\t\t\t\"Shoulds and Oughts\",\n\t\t\t\t\"Emotional Reasoning\",\n\t\t\t\t\"Labelling\",\n\t\t\t\t\"None - feeling great!\",\n\t\t\t\t\"Unsure\",\n\t\t\t],\n\t\t\tdataLabels: {\n\t\t\t\tenabled: true,\n\t\t\t\tenabledOnSeries: true,\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tlabels: [\n\t\t\t\t\t\"All or Nothing\",\n\t\t\t\t\t\"Jumping to Conclusions\",\n\t\t\t\t\t\"Overgeneralisation\",\n\t\t\t\t\t\"Catastrophising\",\n\t\t\t\t\t\"Mental filtering\",\n\t\t\t\t\t\"Disqualifying the Positive\",\n\t\t\t\t\t\"Personalisation\",\n\t\t\t\t\t\"Shoulds and Oughts\",\n\t\t\t\t\t\"Emotional Reasoning\",\n\t\t\t\t\t\"Labelling\",\n\t\t\t\t\t\"None - feeling great!\",\n\t\t\t\t\t\"Unsure\",\n\t\t\t\t],\n\t\t\t\tcolors: [\n\t\t\t\t\t\"#96508E\",\n\t\t\t\t\t\"#009BF9\",\n\t\t\t\t\t\"#86A8E7\",\n\t\t\t\t\t\"#fc5c65\",\n\t\t\t\t\t\"#FF397B\",\n\t\t\t\t\t\"#8073CA\",\n\t\t\t\t\t\"#f7b731\",\n\t\t\t\t\t\"#F7ABB9\",\n\t\t\t\t\t\"#D16BA5\",\n\t\t\t\t\t\"#fed330\",\n\t\t\t\t\t\"#2bcbba\",\n\t\t\t\t\t\"#778ca3\",\n\t\t\t\t],\n\t\t\t\tchart: {\n\t\t\t\t\ttype: \"donut\",\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tpie: {\n\t\t\t\t\t\texpandOnClick: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tformatter: function (value) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: \"Monthly thinking habits\",\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false,\n\t\t\t\t\t//   position: \"right\"\n\t\t\t\t},\n\t\t\t\t// responsive: [\n\t\t\t\t//   {\n\t\t\t\t//     breakpoint: 480,\n\t\t\t\t//     options: {\n\t\t\t\t//       chart: {\n\t\t\t\t//         width: 200\n\t\t\t\t//       },\n\t\t\t\t//       legend: {\n\t\t\t\t//         position: \"bottom\"\n\t\t\t\t//       }\n\t\t\t\t//     }\n\t\t\t\t//   }\n\t\t\t\t// ]\n\t\t\t},\n\t\t};\n\t}\n\n\t// component life cycle method\n\tcomponentDidMount = () => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t\"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Thoughts\"\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tvar fullData = response.data.thoughts;\n\t\t\t\t//console.log(fullData);\n\n\t\t\t\tfor (let i = 0; i < fullData.length; i++) {\n\t\t\t\t\tlet thought = fullData[i];\n\t\t\t\t\tlet date = moment.utc(thought.Timestamp).format(\"YYYY-MM-DD\");\n\t\t\t\t\tlet time = moment.utc(thought.Timestamp).format(\"HH:MM\");\n\t\t\t\t\tthought.eventDate = date;\n\t\t\t\t\tthought.eventTime = time;\n\t\t\t\t}\n\t\t\t\t//console.log(fullData);\n\n\t\t\t\t// //create last month in dates\n\t\t\t\t// var end = moment().format(\"YYYY-MM-DD\");\n\t\t\t\t// var start = moment()\n\t\t\t\t//   .subtract(1, \"months\")\n\t\t\t\t//   .format(\"YYYY-MM-DD\");\n\t\t\t\t// const range = moment.range(start, end);\n\n\t\t\t\t// create date range to be in March so data displays in charts (just as a demo)\n\t\t\t\t// can uncomment code above to revert back to being last months' dates\n\t\t\t\tvar end = \"2020-03-26\";\n\t\t\t\tvar start = \"2020-02-26\";\n\t\t\t\tconst range = moment.range(start, end);\n\n\t\t\t\t//console.log(start, end);\n\n\t\t\t\t//filter data to be in range of last week\n\n\t\t\t\tvar lastMonthData = fullData.filter(function (entry) {\n\t\t\t\t\treturn range.contains(moment(entry.eventDate)) === true;\n\t\t\t\t});\n\n\t\t\t\t//console.log(lastMonthData);\n\t\t\t\tvar total = lastMonthData.length;\n\n\t\t\t\tconst distortions = [\n\t\t\t\t\t\"All or Nothing\",\n\t\t\t\t\t\"Jumping to Conclusions\",\n\t\t\t\t\t\"Overgeneralisation\",\n\t\t\t\t\t\"Catastrophising\",\n\t\t\t\t\t\"Mental filtering\",\n\t\t\t\t\t\"Disqualifying the Positive\",\n\t\t\t\t\t\"Personalisation\",\n\t\t\t\t\t\"Shoulds & Oughts\",\n\t\t\t\t\t\"Emotional Reasoning\",\n\t\t\t\t\t\"Labelling\",\n\t\t\t\t\t\"None - feeling great!\",\n\t\t\t\t\t\"Unsure\",\n\t\t\t\t];\n\n\t\t\t\tlet sum = [];\n\n\t\t\t\tfunction countDistortions(distortion, lastMonthData) {\n\t\t\t\t\tlet count = 0;\n\t\t\t\t\tfor (let i = 0; i < lastMonthData.length; i++) {\n\t\t\t\t\t\tif (lastMonthData[i].Distortion === distortion) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn count;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < distortions.length; i++) {\n\t\t\t\t\tlet distortion = distortions[i];\n\n\t\t\t\t\tsum.push(countDistortions(distortion, lastMonthData));\n\t\t\t\t}\n\t\t\t\t//console.log(sum);\n\n\t\t\t\t// divide each sum by the total and * 100 to make percentages\n\t\t\t\tlet percentages = [];\n\t\t\t\tfunction makePercent(item, total) {\n\t\t\t\t\tvar number = (item / total) * 100;\n\n\t\t\t\t\tvar rounded = Math.round(number * 10) / 10;\n\t\t\t\t\treturn rounded;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < sum.length; i++) {\n\t\t\t\t\tlet item = sum[i];\n\n\t\t\t\t\tpercentages.push(makePercent(item, total));\n\t\t\t\t}\n\t\t\t\t//console.log(percentages);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tseries: percentages,\n\t\t\t\t});\n\t\t\t})\n\n\t\t\t.catch(function (error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id=\"donut\">\n\t\t\t\t\t<ReactApexChart\n\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\tseries={this.state.series}\n\t\t\t\t\t\tlabels={this.state.labels}\n\t\t\t\t\t\ttype=\"donut\"\n\t\t\t\t\t\twidth=\"380\"\n\t\t\t\t\t\tclassName=\"d-flex align-self-center\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"html-dist\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Donut;\n","import React from \"react\";\nimport Welcome from \"./Welcome\";\nimport DateTime from \"./DateTime\";\nimport LearnMore from \"./LearnMore.js\";\nimport LetsGo from \"./LetsGo.js\";\nimport SubHeading from \"./SubHeading\";\nimport Donut from \"../Dashboard/Donut\";\n\nfunction Home() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row pl-4 pr-4 justify-content-between\">\n        <div className=\"col-md-4 d-flex align-items-center\">\n          <Welcome />\n        </div>\n        <div className=\"col-md-3\">\n          <DateTime />\n        </div>\n      </div>\n\n      <div className=\"row pt-3 pl-4 pr-4 pb-1 justify-content-between\">\n        <div className=\"col-md-4\">\n          <SubHeading />\n        </div>\n        <div className=\"col-md-4 donut-box shadow-sm align-self-start\">\n          <div className=\"donut-layer shadow-sm\">\n            <Donut />\n          </div>\n        </div>\n        <div className=\"col-md-3 p-0\">\n          <LearnMore />\n          <LetsGo />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nimport {\n\tButton,\n\tUncontrolledPopover,\n\tPopoverHeader,\n\tPopoverBody\n} from \"reactstrap\";\n\nconst FirstFive = (props) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<Button id=\"PopoverFocus1\" type=\"button\">\n\t\t\t\t\tAll or nothing\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\ttarget=\"PopoverFocus1\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>All or nothing thinking</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody>Believing in one of  two extremes,  failure or success, and\n           \t\t\t\t that there is no ‘grey’ areas.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t\t\n\t\t\t</div>\n\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus2\" type=\"button\">\n\t\t\t\t\tJumping to Conclusions\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\ttarget=\"PopoverFocus2\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Jumping to Conclusions</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody>Making pessimistic interpretations or predictions without any\n            \t\t\tsupporting evidence.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus3\" type=\"button\">\n\t\t\t\t\tOvergeneralisation\n\t\t\t\t</Button>{\" \"}\n\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\ttarget=\"PopoverFocus3\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Overgeneralisation</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody> Coming to a general conclusion based on a specific single\n          \t\t\t  incident. \n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus4\" type=\"button\">\n\t\t\t\t\tCatastrophising\n\t\t\t\t</Button>{\" \"}\n\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\ttarget=\"PopoverFocus4\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Catastrophising</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody> Viewing an unfavourable outcome to an event as a complete disaster.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus5\" type=\"button\">\n\t\t\t\t\tMental Filtering\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\ttarget=\"PopoverFocus5\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Mental Filtering</PopoverHeader>\n\t\t\t\t\n\t\t\t\t\t<PopoverBody> Taking negative details and magnifying them while also filtering\n\t\t\t\t\tout all positives of a situation.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\n\n\n\n\n\t\t</React.Fragment>\n\t);\n};\n\nexport default FirstFive;\n","import React from \"react\";\n\nimport {\n\tButton,\n\tUncontrolledPopover,\n\tPopoverHeader,\n\tPopoverBody\n} from \"reactstrap\";\n\nconst SecondFive = (props) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus6\" type=\"button\">\n\t\t\t\tDisqualifying the Positives\n\t\t\t\t</Button>{\" \"}\n\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\ttarget=\"PopoverFocus6\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Disqualifying the Positives</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody> Disqualifying all the positives, and then coming up with several reasons why\n            \t\tthe positive events in your life do not count.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus7\" type=\"button\">\n\t\t\t\tPersonalisation\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\ttarget=\"PopoverFocus7\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Personalisation</PopoverHeader>\n\n\t\t\t\t\t<PopoverBody> Believing that everything others say or do is some kind of direct,\n           \t\t\t personal reaction to you. Often comparing yourself to others and\n           \t\t\t taking things personally even when it was not meant that way.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus8\" type=\"button\">\n\t\t\t\tShoulds & Oughts\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\ttarget=\"PopoverFocus8\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Shoulds & Oughts</PopoverHeader>\n\n\t\t\t\t\t<PopoverBody> The belief that there are certain rules to follow about how someone ‘should be’ and 'ought to' behave, when\n          \t\t\t Feelings of  either angry or guilty that you’ve failed, when these are not followed.\n\t\t\t\t\t</PopoverBody>\n\n\t\t\t\t</UncontrolledPopover>\n\t\t\t\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus9\" type=\"button\">\n\t\t\t\tEmotional Reasoning\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\ttarget=\"PopoverFocus9\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Emotional Reasoning</PopoverHeader>\n\t\t\t\t\n\t\t\t\t\t<PopoverBody> Feeling a certain way and assuming that it is true. This may lead to\n           \t\t\t ignoring rationality and logic when making assumptions.\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<Button id=\"PopoverFocus10\" type=\"button\">\n\t\t\t\tLabelling\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t\n\t\t\t\t<UncontrolledPopover\n\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\ttarget=\"PopoverFocus10\"\n\t\t\t\t>\n\t\t\t\t\t<PopoverHeader>Labelling</PopoverHeader>\n\t\t\t\t\t\n\t\t\t\t\t<PopoverBody>  The assignment of unhealthy label to yourself or others. This\n           \t\t\t is a mixture of stereotyping and overgeneralisation.\n\t\t\t\t\t\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t\n\t\t\t\t</UncontrolledPopover>\n\t\t\t\n\t\t\t</div>\n\n\n\n\n\n\t\t\t\n\t\t</React.Fragment>\n\t);\n};\n\nexport default SecondFive;\n","import React, { Component } from \"react\";\nimport FirstFive from \"./FirstFive\";\nimport SecondFive from \"./SecondFive\";\n\nclass DistDiary extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\n\t\t\t\t<div className=\"col justify-content-around\">\n\t\t\t\t\t<FirstFive />\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"col justify-content-around\">\n\t\t\t\t\t<SecondFive />\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DistDiary;\n","import React, { Component } from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport DistDiary from \"./DistDiary\";\nimport axios from \"axios\";\nconst Moment = require(\"moment\");\nconst MomentRange = require(\"moment-range\");\nconst moment = MomentRange.extendMoment(Moment);\nmoment().format();\n\nexport class Diary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDay: undefined,\n      data: [],\n      filteredData: []\n    };\n  }\n\n  // component life cycle method\n  componentDidMount = () => {\n    axios\n      .get(\n        \"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Thoughts\"\n      )\n      .then(response => {\n        var fullData = response.data.thoughts;\n        //console.log(fullData);\n\n        // add values which extract date and time from timestamp\n        for (let i = 0; i < fullData.length; i++) {\n          let thought = fullData[i];\n          let date = moment.utc(thought.Timestamp).format(\"YYYY-MM-DD\");\n          let time = moment.utc(thought.Timestamp).format(\"HH:MM\");\n          thought.eventDate = date;\n          thought.eventTime = time;\n        }\n\n        this.setState({\n          data: fullData,\n          filteredData: fullData\n        });\n      })\n\n      .catch(function(error) {\n        // handle error\n        console.error(error);\n      });\n  };\n\n  //modified so that when you click the selected date again, selectDay gets set to undefined\n  //if statement in return method that toggles what's displayed\n  handleDayClick = (day, { selected }) => {\n    if (selected) {\n      this.setState({ selectedDay: undefined });\n      return;\n    }\n    this.setState({ selectedDay: day });\n\n    ///filter data to match the date selected\n    let data = this.state.data;\n\n    var dataToRender = [];\n    data.forEach(function(entry) {\n      let dayFormatted = moment(day).format(\"YYYY-MM-DD\");\n      if (entry.eventDate === dayFormatted) {\n        dataToRender.push(entry);\n      }\n    });\n    this.setState({ filteredData: dataToRender });\n  };\n\n  // get data from database and filter for day selected on calendar\n\n  render() {\n    return (\n      <div className=\"container-fluid container-diary\">\n        <div className=\"row m-3 justify-content-around \">\n          <div className=\"col-4\">\n            <h4>Check out your diary!</h4>\n\n            <div className=\"donut-box\">\n              <DayPicker\n                onDayClick={this.handleDayClick}\n                selectedDays={this.state.selectedDay}\n                className=\"mt-3 mb-0 donut-layer\"\n              />\n              {this.state.selectedDay ? (\n                <React.Fragment>\n                  <p className=\"mb-0 ml-3 mt-2\">\n                    You're viewing {this.state.selectedDay.toLocaleDateString()}\n                  </p>\n                  <p className=\"mb-0 ml-3\">\n                    <b>Scroll down to view your entries.</b>\n                  </p>\n                </React.Fragment>\n              ) : (\n                <p className=\"mb-0 mt-2 ml-3\">\n                  <b>Please select a day.</b>\n                </p>\n              )}\n            </div>\n\n            {this.state.selectedDay ? (\n              <div>\n                {this.state.filteredData.map((item, key) => (\n                  <p>\n                    <br />\n                    <strong>Mood: </strong>\n                    {item.Mood}\n                    <br />\n                    <strong>Intensity: </strong>\n                    {item.Mood_intensity}\n                    <br />\n                    <strong>Expansion on mood: </strong>\n                    {item.Thoughts}\n                    <br />\n                    <strong>Distortion: </strong>\n                    {item.Distortion}\n                    <br />\n                    <strong>Response: </strong>\n                    {item.Response}\n                    <br />\n                  </p>\n                ))}\n              </div>\n            ) : (\n              <p> </p>\n            )}\n          </div>\n          <div className=\"col-6\">\n            <DistDiary />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Diary;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport uuidv4 from \"uuid/v4\";\nimport axios from \"axios\";\n\nexport default function Register() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newUser, setNewUser] = useState(null);\n\n  function validateForm() {\n    return (\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      email.length > 0 &&\n      password.length > 0\n    );\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  const history = useHistory();\n  function submit() {\n    //variable to be sent\n    const loginToAdd = {\n      userId: uuidv4(),\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    };\n    /// connect to backend\n    axios\n      .post(\n        \"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Users\",\n        loginToAdd\n      )\n      // handle success\n      .then(response => {\n        history.push(\"/home\");\n      })\n      // handle error\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  return newUser === null ? (\n    <form className=\"loginForm\" onSubmit={handleSubmit}>\n      <p className=\"headers text-sm-center text-lg-left\">\n        Sign up to thought catcher!\n      </p>\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            placeholder=\"Enter your first name\"\n            value={firstName}\n            onChange={e => setFirstName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group col-md-6\">\n          <label for=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            placeholder=\"Enter your last name\"\n            value={lastName}\n            onChange={e => setLastName(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"inputAddress\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <small id=\"emailHelp\" className=\"form-text text-muted\">\n          We'll never share your email with anyone else.\n        </small>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control mb-4\"\n          id=\"password\"\n          placeholder=\"Choose your password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"form-row justify-content-sm-center justify-content-lg-start\">\n        <button\n          type=\"submit\"\n          className=\"btn btnLogin btn-lg btn-block btn-shape\"\n          disabled={!validateForm()}\n          onClick={submit}\n        >\n          Register{\" \"}\n        </button>\n      </div>\n      <div className=\"form-row form-inline mt-3 justify-content-sm-center justify-content-lg-start\">\n        {\" \"}\n        Already registered?\n        <button\n          type=\"button\"\n          className=\"btn btn-md btn-simple p-0 m-1\"\n          onClick={e => setNewUser(false)}\n        >\n          Login\n        </button>\n      </div>\n    </form>\n  ) : (\n    <Login />\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport uuidv4 from \"uuid/v4\";\nimport axios from \"axios\";\n\nexport default function Login() {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [newUser, setNewUser] = useState(null);\n\n\tfunction validateForm() {\n\t\treturn email.length > 0 && password.length > 0;\n\t}\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t}\n\n\tconst history = useHistory();\n\tfunction login() {\n\t\t/// connect to backend\n\t\taxios\n\t\t\t.get(\"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Users\")\n\t\t\t// handle success\n\t\t\t.then((response) => {\n\t\t\t\tconst users = response.data.users;\n\t\t\t\tconsole.log(users);\n\n\t\t\t\tfor (let i = 0; i < users.length; i++) {\n\t\t\t\t\tlet user = users[i];\n\t\t\t\t\tif (user.email === email && user.password === password) {\n\t\t\t\t\t\thistory.push(\"/home\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t// handle error\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n\n\treturn !newUser ? (\n\t\t<form onSubmit={handleSubmit} classname=\"ml-3 mr-3\">\n\t\t\t<p className=\"headers text-sm-center text-lg-left \">\n\t\t\t\tLet's catch some thoughts!\n\t\t\t</p>\n\t\t\t<div className=\"form-group \">\n\t\t\t\t<label htmlFor=\"email\">Email address</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\taria-describedby=\"email\"\n\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">\n\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tplaceholder=\"Choose your password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-group form-check\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\tid=\"rememberMeCheckbox\"\n\t\t\t\t/>\n\t\t\t\t<label className=\"form-check-label\" htmlFor=\"rememberMeCheckbox\">\n\t\t\t\t\tRemember me\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"form-row justify-content-sm-center justify-content-lg-start\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"btn btnLogin btn-lg btn-block btn-shape \"\n\t\t\t\t\tdisabled={!validateForm()}\n\t\t\t\t\tonClick={login}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"form-row form-inline mt-3 justify-content-sm-center justify-content-lg-start\">\n\t\t\t\tNot yet registered?{\" \"}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-md btn-simple p-0 m-1\"\n\t\t\t\t\tonClick={(e) => setNewUser(true)}\n\t\t\t\t>\n\t\t\t\t\tSign Up\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t) : (\n\t\t<Register />\n\t);\n}\n","import React from \"react\";\nimport Login from \"./Login\";\nimport tspCatchThoughtCrop from \"./tspCatchThoughtCrop.png\";\n\nfunction LandingPage() {\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t<div className=\"col-lg-7\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={tspCatchThoughtCrop}\n\t\t\t\t\t\talt=\"catchThought\"\n\t\t\t\t\t\tid=\"catchThought\"\n\t\t\t\t\t\tclassName=\"img-fluid rounded mx-auto d-block\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-lg-4\">\n\t\t\t\t\t<Login />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"./Logo.png\";\n\nfunction Nav() {\n  const navStyle = {\n    color: \"orange\"\n  };\n\n  return (\n    <nav className=\"navbar p-2 ml-5\">\n      <a class=\"navbar-brand\" href=\"/\">\n        <img\n          src={Logo}\n          width=\"150\"\n          class=\"d-inline-block align-top\"\n          alt=\"logo Thought Catcher\"\n        />\n      </a>\n      <ul className=\"nav-links my-auto mr-5\">\n        <Link style={navStyle} to=\"/home\">\n          <li>Home</li>\n        </Link>\n        <Link style={navStyle} to=\"/diary\">\n          <li>Diary</li>\n        </Link>\n        <Link style={navStyle} to=\"/definitions\">\n          <li>Definitions</li>\n        </Link>\n        <Link style={navStyle} to=\"/moodscriber\">\n          <li>Mood Scriber</li>\n        </Link>\n        <Link style={navStyle} to=\"/dashboard\">\n          <li>Dashboard</li>\n        </Link>\n        <Link style={navStyle} to=\"/\">\n          <li>Login</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\n\nvar moment = require(\"moment\");\nmoment().format();\n\nclass Bubble extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tseries: [],\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\theight: 300,\n\t\t\t\t\ttype: \"bubble\",\n\t\t\t\t},\n\t\t\t\tcolors: [\"#2E93fA\", \"#66DA26\", \"#546E7A\", \"#E91E63\", \"#FF9800\"],\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tfill: {\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: \"Monthly moods\",\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttickAmount: 6,\n\t\t\t\t\ttype: \"datetime\",\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\ttickAmount: 8,\n\t\t\t\t\tmin: 6,\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\t\treturn val + \":00\";\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tformat: \"dd MMM\",\n\t\t\t\t\t\tformatter: undefined,\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tformatter: undefined,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tformatter: (seriesName) => seriesName,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tz: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tformatter: undefined,\n\t\t\t\t\t\ttitle: \"Intensity: \",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshowForNullSeries: false,\n\t\t\t\t\tshowForZeroSeries: false,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\t// component life cycle method\n\tcomponentDidMount = () => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t\"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Thoughts\"\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\t// handle success\n\n\t\t\t\tlet fullData = response.data.thoughts;\n\t\t\t\t//console.log(fullData);\n\t\t\t\tfor (let i = 0; i < fullData.length; i++) {\n\t\t\t\t\tlet thought = fullData[i];\n\t\t\t\t\tlet date = moment.utc(thought.Timestamp).format(\"YYYY-MM-DD\");\n\t\t\t\t\tlet time = moment.utc(thought.Timestamp).format(\"HH:MM\");\n\t\t\t\t\tthought.eventDate = date;\n\t\t\t\t\tthought.eventTime = time;\n\t\t\t\t}\n\n\t\t\t\t// //create last month in dates\n\t\t\t\t// var end = moment().format(\"YYYY-MM-DD\");\n\t\t\t\t// var start = moment()\n\t\t\t\t//   .subtract(1, \"months\")\n\t\t\t\t//   .format(\"YYYY-MM-DD\");\n\t\t\t\t// const range = moment.range(start, end);\n\n\t\t\t\t// console.log(start, end);\n\n\t\t\t\t// //filter data to be in range of last month\n\n\t\t\t\t// create date range to be in March so data displays in charts (just as a demo)\n\t\t\t\t// can uncomment code above to revert back to being last months' dates\n\t\t\t\tvar end = \"2020-03-26\";\n\t\t\t\tvar start = \"2020-02-26\";\n\t\t\t\tconst range = moment.range(start, end);\n\n\t\t\t\tvar lastMonthData = fullData.filter(function (entry) {\n\t\t\t\t\treturn range.contains(moment(entry.eventDate)) === true;\n\t\t\t\t});\n\n\t\t\t\tconsole.log(lastMonthData);\n\n\t\t\t\tconst moods = [\n\t\t\t\t\t\"Neutral\",\n\t\t\t\t\t\"Stressed\",\n\t\t\t\t\t\"Anxious\",\n\t\t\t\t\t\"Sad\",\n\t\t\t\t\t\"Angry\",\n\t\t\t\t\t\"Overwhelmed\",\n\t\t\t\t\t\"Exhausted\",\n\t\t\t\t\t\"Happy\",\n\t\t\t\t\t\"Excited\",\n\t\t\t\t\t\"Inspired\",\n\t\t\t\t\t\"Calm\",\n\t\t\t\t];\n\n\t\t\t\tconst plottable = moods.map((name) => {\n\t\t\t\t\t// Filter the data to just data for this mood name.\n\t\t\t\t\tconst matches = lastMonthData.filter((datum) => datum.Mood === name);\n\t\t\t\t\t// Format the data into a list of datetimes for this mood.\n\t\t\t\t\tconst data = matches.map((record) => {\n\t\t\t\t\t\t// The library wants time and intentisty to be non-string\n\t\t\t\t\t\t// The library wants things in MM-DD-YYYY format.\n\t\t\t\t\t\tconst [year, month, day] = record.eventDate.split(\"-\");\n\t\t\t\t\t\tconst [hour] = record.eventTime.split(\":\").map(Number);\n\t\t\t\t\t\tconst intensityInt = parseInt(record.Mood_intensity);\n\t\t\t\t\t\treturn [`${month}-${day}-${year}`, hour, intensityInt];\n\t\t\t\t\t});\n\t\t\t\t\t// All the records for this mood.\n\t\t\t\t\treturn { name, data };\n\t\t\t\t});\n\n\t\t\t\tconsole.log(plottable);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tseries: plottable,\n\t\t\t\t});\n\t\t\t})\n\n\t\t\t.catch(function (error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id=\"bubble\">\n\t\t\t\t\t<ReactApexChart\n\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\tseries={this.state.series}\n\t\t\t\t\t\ttype=\"bubble\"\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"html-dist\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Bubble;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nconst Moment = require(\"moment\");\nconst MomentRange = require(\"moment-range\");\nconst moment = MomentRange.extendMoment(Moment);\nmoment().format();\n\nclass HeatMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tvar data = [];\n\n\t\tdata.reverse();\n\n\t\tvar colors = [\"#F3B415\", \"#F27036\", \"#663F59\"];\n\n\t\tcolors.reverse();\n\n\t\tthis.state = {\n\t\t\tseries: [],\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\theight: 370,\n\t\t\t\t\ttype: \"heatmap\",\n\t\t\t\t},\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tcolors: colors,\n\t\t\t\txaxis: {\n\t\t\t\t\ttype: \"date\",\n\t\t\t\t\tformat: \"dd MMM\",\n\t\t\t\t\tcategories: [],\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: \"Weekly heat map\",\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tpadding: {\n\t\t\t\t\t\tright: 20,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\t// component life cycle method\n\tcomponentDidMount = () => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t\"https://2xi4uzqzba.execute-api.eu-west-2.amazonaws.com/dev/Thoughts\"\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tvar fullData = response.data.thoughts;\n\t\t\t\t//console.log(fullData);\n\n\t\t\t\t// added eventDate and eventTime into the data\n\t\t\t\tfor (let i = 0; i < fullData.length; i++) {\n\t\t\t\t\tlet thought = fullData[i];\n\t\t\t\t\tlet date = moment.utc(thought.Timestamp).format(\"YYYY-MM-DD\");\n\t\t\t\t\tlet time = moment.utc(thought.Timestamp).format(\"HH:MM\");\n\t\t\t\t\tthought.eventDate = date;\n\t\t\t\t\tthought.eventTime = time;\n\t\t\t\t}\n\n\t\t\t\t// CHANGED DATES TO BE IN MARCH TO USE DATA FOR DEMO\n\n\t\t\t\t// //create last week in dates\n\t\t\t\t// var end = moment().format(\"YYYY-MM-DD\");\n\t\t\t\t// var start = moment().subtract(1, \"weeks\").format(\"YYYY-MM-DD\");\n\t\t\t\t// const range = moment.range(start, end);\n\n\t\t\t\t// //filter data to be in range of last week\n\t\t\t\t// var lastWeekData = fullData.filter(function (entry) {\n\t\t\t\t// \treturn range.contains(moment(entry.eventDate)) === true;\n\t\t\t\t// });\n\n\t\t\t\t// //console.log(lastWeekData);\n\t\t\t\t// // create array with each date for last 7 days\n\t\t\t\t// let lastWeek = [\n\t\t\t\t// \tmoment().subtract(7, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(6, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(5, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(4, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(3, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(2, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// \tmoment().subtract(1, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t// ];\n\n\t\t\t\t// // create days of week from lastWeek\n\t\t\t\t// let lastWeekDays = [];\n\n\t\t\t\t// lastWeek.forEach(function (date) {\n\t\t\t\t// \tvar day = moment(date).format(\"DD MMM\");\n\t\t\t\t// \tlastWeekDays.push(day);\n\t\t\t\t// });\n\n\t\t\t\t// console.log(lastWeekDays);\n\n\t\t\t\t// create dates to match 7 days for demo data\n\t\t\t\t// uncomment code above to revert back to last weeks' dates based on current date\n\n\t\t\t\t//create demo week in dates\n\t\t\t\tvar end = \"2020-03-24\";\n\t\t\t\tvar start = \"2020-03-17\";\n\t\t\t\tconst range = moment.range(start, end);\n\n\t\t\t\t//filter data to be in range of demo week\n\t\t\t\tvar lastWeekData = fullData.filter(function (entry) {\n\t\t\t\t\treturn range.contains(moment(entry.eventDate)) === true;\n\t\t\t\t});\n\n\t\t\t\tconsole.log(lastWeekData);\n\n\t\t\t\t// create array with each date for demo dates\n\t\t\t\tlet lastWeek = [\n\t\t\t\t\tmoment(end).subtract(7, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(6, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(5, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(4, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(3, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(2, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t\tmoment(end).subtract(1, \"days\").format(\"YYYY-MM-DD\"),\n\t\t\t\t];\n\n\t\t\t\t// create days of week from lastWeek\n\t\t\t\tlet lastWeekDays = [];\n\n\t\t\t\tlastWeek.forEach(function (date) {\n\t\t\t\t\tvar day = moment(date).format(\"DD MMM\");\n\t\t\t\t\tlastWeekDays.push(day);\n\t\t\t\t});\n\n\t\t\t\tconsole.log(lastWeekDays);\n\n\t\t\t\tconst negativeThoughts = [\n\t\t\t\t\t\"All or Nothing\",\n\t\t\t\t\t\"Jumping to Conclusions\",\n\t\t\t\t\t\"Overgeneralisation\",\n\t\t\t\t\t\"Catastrophising\",\n\t\t\t\t\t\"Mental filtering\",\n\t\t\t\t\t\"Disqualifying the Positive\",\n\t\t\t\t\t\"Personalisation\",\n\t\t\t\t\t\"Shoulds & Oughts\",\n\t\t\t\t\t\"Emotional Reasoning\",\n\t\t\t\t\t\"Labelling\",\n\t\t\t\t\t\"Unsure\",\n\t\t\t\t];\n\n\t\t\t\tconst positiveMoods = [\"Happy\", \"Excited\", \"Inspired\", \"Calm\"];\n\n\t\t\t\tconst negativeMoods = [\n\t\t\t\t\t\"Neutral\",\n\t\t\t\t\t\"Stressed\",\n\t\t\t\t\t\"Anxious\",\n\t\t\t\t\t\"Sad\",\n\t\t\t\t\t\"Angry\",\n\t\t\t\t\t\"Overwhelmed\",\n\t\t\t\t\t\"Exhausted\",\n\t\t\t\t];\n\n\t\t\t\t// NEED TO CREATE FUNCTIONS WHICH COUNTS THE NUMBER OF NEGATIVE MOODS, NEGATIVE THOUGHTS\n\t\t\t\t// AND POSITIVE MOODS FOR EACH DAY OF THE LAST 7 DAYS.\n\n\t\t\t\t//negative moods\n\t\t\t\tconst negativeMoodDays = lastWeek.map((day) => {\n\t\t\t\t\t// find data that matches day\n\t\t\t\t\tconst negativeMoodData = lastWeekData\n\t\t\t\t\t\t.filter(({ Timestamp }) => {\n\t\t\t\t\t\t\t// filter by days where the Timestamp starts with our day\n\t\t\t\t\t\t\treturn Timestamp.startsWith(day);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(({ Mood }) => {\n\t\t\t\t\t\t\t// filter for days where negativeMoods contains our current Mood\n\t\t\t\t\t\t\treturn negativeMoods.includes(Mood);\n\t\t\t\t\t\t});\n\t\t\t\t\t//return our new object with a count of those days\n\t\t\t\t\treturn {\n\t\t\t\t\t\tday: day,\n\t\t\t\t\t\tcount: negativeMoodData.length,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet negativeMoodresult = negativeMoodDays.map((a) => a.count);\n\t\t\t\t//console.log(negativeMoodresult);\n\n\t\t\t\t//negative thoughts\n\t\t\t\tconst negativeThoughtDays = lastWeek.map((day) => {\n\t\t\t\t\t// find data that matches day\n\t\t\t\t\tconst negativeThoughtData = lastWeekData\n\t\t\t\t\t\t.filter(({ Timestamp }) => {\n\t\t\t\t\t\t\t// filter by days where the Timestamp starts with our day\n\t\t\t\t\t\t\treturn Timestamp.startsWith(day);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(({ Distortion }) => {\n\t\t\t\t\t\t\t// filter for days where negativeMoods contains our current Mood\n\t\t\t\t\t\t\treturn negativeThoughts.includes(Distortion);\n\t\t\t\t\t\t});\n\t\t\t\t\t//return our new object with a count of those days\n\t\t\t\t\treturn {\n\t\t\t\t\t\tday: day,\n\t\t\t\t\t\tcount: negativeThoughtData.length,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet negativeThoughtresult = negativeThoughtDays.map((a) => a.count);\n\t\t\t\t//console.log(negativeThoughtresult);\n\n\t\t\t\t//positive moods\n\t\t\t\tconst positiveMoodDays = lastWeek.map((day) => {\n\t\t\t\t\t// find data that matches day\n\t\t\t\t\tconst positiveMoodData = lastWeekData\n\t\t\t\t\t\t.filter(({ Timestamp }) => {\n\t\t\t\t\t\t\t// filter by days where the Timestamp starts with our day\n\t\t\t\t\t\t\treturn Timestamp.startsWith(day);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(({ Mood }) => {\n\t\t\t\t\t\t\t// filter for days where positiveMoods contains our current Mood\n\t\t\t\t\t\t\treturn positiveMoods.includes(Mood);\n\t\t\t\t\t\t});\n\t\t\t\t\t//return our new object with a count of those days\n\t\t\t\t\treturn {\n\t\t\t\t\t\tday: day,\n\t\t\t\t\t\tcount: positiveMoodData.length,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet positiveMoodresult = positiveMoodDays.map((a) => a.count);\n\t\t\t\t//console.log(positiveMoodresult);\n\n\t\t\t\tvar updatedData = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Negative moods\",\n\t\t\t\t\t\tdata: negativeMoodresult,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Negative Thoughts\",\n\t\t\t\t\t\tdata: negativeThoughtresult,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Positive moods\",\n\t\t\t\t\t\tdata: positiveMoodresult,\n\t\t\t\t\t},\n\t\t\t\t];\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tseries: updatedData,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\tcategories: lastWeekDays,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})\n\n\t\t\t.catch(function (error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id=\"chart\">\n\t\t\t\t\t<ReactApexChart\n\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\tseries={this.state.series}\n\t\t\t\t\t\ttype=\"heatmap\"\n\t\t\t\t\t\theight={370}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"html-dist\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HeatMap;\n","import React from \"react\";\nimport Bubble from \"./Bubble\";\nimport Donut from \"./Donut\";\nimport HeatMap from \"./HeatMap\";\nimport { Carousel } from \"react-bootstrap\";\n\nconst style = {\n  backgroundColor: \"#ced2e8\",\n  borderRadius: \"5px 20px 5px\"\n};\n\nconst carousel = {\n  backgroundColor: \"white\",\n  borderRadius: \"5px 20px 5px\"\n};\n\nfunction Dashboard() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row m-1\">\n        <div className=\"col\">\n          <h4>Welcome to your Dashboard!</h4>\n        </div>\n      </div>\n      <div class=\"row mb-3 justify-content-around\">\n        <div className=\"col col-sm-12 col-lg-6 m-2 shadow-sm\" style={style}>\n          <div style={carousel} className=\"mt-3 mb-3 ml-2 mr-2 shadow-sm\">\n            <Carousel>\n              <Carousel.Item>\n                <Bubble />\n              </Carousel.Item>\n              <Carousel.Item>\n                <HeatMap />\n              </Carousel.Item>\n            </Carousel>\n          </div>\n        </div>\n        <div\n          className=\"col-5  d-flex justify-content-center m-2 shadow-sm\"\n          style={style}\n        >\n          <div style={carousel} className=\"mt-3 mb-3 pr-4 pl-4 shadow-sm\">\n            <Donut />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport MoodScriber from \"./components/MoodScriber\";\nimport Definitions from \"./components/Definitions\";\nimport Home from \"./components/Home_Page/Home\";\nimport Diary from \"./components/diary/Diary\";\nimport LandingPage from \"./components/Login/LandingPage\";\nimport Login from \"./components/Login/LandingPage\";\nimport Register from \"./components/Login/Register\";\nimport Nav from \"./components/Nav\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tHashRouter,\n} from \"react-router-dom\";\n\nfunction App() {\n\t// const Home = () => (\n\t// \t<div>\n\t// \t\t<Home />\n\t// \t</div>\n\t// );\n\n\treturn (\n\t\t<HashRouter basename=\"/\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={LandingPage} />\n\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t<Route path=\"/register\" exact component={Register} />\n\t\t\t\t\t<Route path=\"/home\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/moodscriber\" component={MoodScriber} />\n\t\t\t\t\t<Route path=\"/diary\" component={Diary} />\n\t\t\t\t\t<Route path=\"/definitions\" component={Definitions} />\n\t\t\t\t\t<Route path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/3366283.0bd20bcb.png\";","module.exports = __webpack_public_path__ + \"static/media/BlackWhite.5f263296.png\";","module.exports = __webpack_public_path__ + \"static/media/JumpingToConclusions.532142af.png\";","module.exports = __webpack_public_path__ + \"static/media/Overgeneralisation.3c73e888.png\";","module.exports = __webpack_public_path__ + \"static/media/Shoulds.88ac802f.png\";","module.exports = __webpack_public_path__ + \"static/media/MentalFilter.69478fb2.png\";","module.exports = __webpack_public_path__ + \"static/media/Personalisation.f473c6db.png\";","module.exports = __webpack_public_path__ + \"static/media/UniversalLabelling.d92be74c.png\";","module.exports = __webpack_public_path__ + \"static/media/Catastrophisation.66cf6855.png\";","module.exports = __webpack_public_path__ + \"static/media/EmotionalReasoning.9a4a0d22.png\";","module.exports = __webpack_public_path__ + \"static/media/Dim.4056f055.png\";","module.exports = __webpack_public_path__ + \"static/media/3364392.8a804db9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tspCatchThoughtCrop.cf0d374a.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.d92f707a.png\";"],"sourceRoot":""}